"""
Django settings for transcendence project.

Generated by 'django-admin startproject' using Django 5.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os, environ # note: environ is for environment variables management
from pathlib import Path
from django.utils.translation import gettext_lazy as _ # for translation

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# note: initializes environment variable manager
env = environ.Env(
    DEBUG=(bool, False)
)
# note: reading .env file
environ.Env.read_env(os.path.join(BASE_DIR.parent.parent.parent / '.env'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY', default='django-insecure-)g4-0v+%z*#nwa=k%-5)#k+o*z2e^k--@+uf&^k#ms*ioiyfc_')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG', default=True)

# ALLOWED_HOSTS = ['localhost', '0.0.0.0']
ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=[])

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    # 'daphne', # added
    'django.contrib.staticfiles',
    # 'rest_framework', # added
    'pong',
    'user_profile',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware', # activating translation
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'transcendence.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'transcendence.wsgi.application'

# note: configuration for Django Channels, using an in-memory channel layer
# CHANNEL_LAYERS = {
#     "default": {
#         "BACKEND": "channels.layers.InMemoryChannelLayer"
#     }
# }

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': env('POSTGRES_DB'),
#         'USER': env('POSTGRES_USER'),
#         'PASSWORD': env('POSTGRES_PASSWORD'),
#         'HOST': env('POSTGRES_HOST', default='localhost'),
#         'PORT': env('POSTGRES_PORT', default='5432'),
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django_prometheus.db.backends.postgresql',
        'NAME': env('POSTGRES_DB'),
        'USER': env('POSTGRES_USER'),
        'PASSWORD': env('POSTGRES_PASSWORD'),
        'HOST': env('POSTGRES_HOST', default='localhost'),
        'PORT': env('POSTGRES_PORT', default='5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

LOCALE_PATHS = [
   os.path.join(BASE_DIR, 'locale')
]

LANGUAGES = (
   ('en', _('English')),
   ('it', _('Italian')),
   ('kr', _('Korean')),
)


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'pong/static/'),
# ]

# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# added
# Session and CSRF cookie security settings
SESSION_ENGINE = 'django.contrib.sessions.backends.db' # note: stores session data in the database
SESSION_COOKIE_NAME = 'sessionid' # note: cookie used for sessions
SESSION_COOKIE_HTTPONLY = False # note: session cookie inaccessible to JavaScript if True
SESSION_COOKIE_SECURE = True # note: session cookie is only sent over HTTPS connections

CSRF_COOKIE_NAME = 'csrftoken' # note: cookie used for Cross-Site Request Forgery (CSRF) protection
CSRF_COOKIE_HTTPONLY = False # note: CSRF cookie inaccessible to JavaScript if True -> here the CSRF token needs to be accessed by JavaScript for certain operations

CSRF_COOKIE_SECURE = True # note: CSRF cookie is only sent over HTTPS connections if True, providing additional security against interception

# Other recommended security settings
SECURE_BROWSER_XSS_FILTER = True # note: enables browser's XSS filtering and helps prevent cross-site scripting attacks
SECURE_CONTENT_TYPE_NOSNIFF = True # note: prevents browser from trying to guess the content type and forces it to stick to the declared content type
X_FRAME_OPTIONS = 'DENY' # note: controls whether the site can be displayed in a frame, iframe, or object
